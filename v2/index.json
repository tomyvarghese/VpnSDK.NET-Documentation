{
  "api/VpnSDK.Extensions.LocationExtensions.html": {
    "href": "api/VpnSDK.Extensions.LocationExtensions.html",
    "title": "Class LocationExtensions | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class LocationExtensions LocationExtensions class. Provides extension methods for locations. Inheritance Object LocationExtensions Namespace : VpnSDK.Extensions Assembly : cs.temp.dll.dll Syntax public static class LocationExtensions Methods Ping(ReadOnlyObservableCollection<ILocation>) Pings all ILocation's in the list. Declaration public static Task Ping(this ReadOnlyObservableCollection<ILocation> list) Parameters Type Name Description ReadOnlyObservableCollection < ILocation > list List of ILocation . Returns Type Description Task A task."
  },
  "api/VpnSDK.Enums.NetworkProtocolType.html": {
    "href": "api/VpnSDK.Enums.NetworkProtocolType.html",
    "title": "Enum NetworkProtocolType | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum NetworkProtocolType Enum NetworkProtocolType. Defines Internet Protocol traffic types. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum NetworkProtocolType Fields Name Description TCP Transmission Control Protocol UDP User Datagram Protocol"
  },
  "api/VpnSDK.EmptyAvailableVpnProtocolsException.html": {
    "href": "api/VpnSDK.EmptyAvailableVpnProtocolsException.html",
    "title": "Class EmptyAvailableVpnProtocolsException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class EmptyAvailableVpnProtocolsException Exception EmptyAvailableVpnProtocolsException. Fires when SDK construction has detected that no VPN protocols are available on the machine due to OS configuration issues or misconfiguration of the SDK. Inheritance Object BaseSDKException CoreException EmptyAvailableVpnProtocolsException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class EmptyAvailableVpnProtocolsException : CoreException Constructors EmptyAvailableVpnProtocolsException(String) Initializes a new instance of the EmptyAvailableVpnProtocolsException class. Declaration public EmptyAvailableVpnProtocolsException(string message) Parameters Type Name Description String message The message to pass to the calling code EmptyAvailableVpnProtocolsException(String, Exception) Initializes a new instance of the EmptyAvailableVpnProtocolsException class. Declaration public EmptyAvailableVpnProtocolsException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException CoreException"
  },
  "api/VpnSDK.ConnectionTerminatedException.html": {
    "href": "api/VpnSDK.ConnectionTerminatedException.html",
    "title": "Class ConnectionTerminatedException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class ConnectionTerminatedException Exception ConnectionTerminatedException. Fires when a VPN connection is terminated by an external source. Inheritance Object BaseSDKException VpnException ConnectionTerminatedException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class ConnectionTerminatedException : VpnException Constructors ConnectionTerminatedException(String) Initializes a new instance of the ConnectionTerminatedException class. Declaration public ConnectionTerminatedException(string message) Parameters Type Name Description String message The message to pass to the calling code ConnectionTerminatedException(String, Exception) Initializes a new instance of the ConnectionTerminatedException class. Declaration public ConnectionTerminatedException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.Enums.DriverInstallResult.html": {
    "href": "api/VpnSDK.Enums.DriverInstallResult.html",
    "title": "Enum DriverInstallResult | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum DriverInstallResult Enum DriverInstallResult. Describes the result of installing a device driver. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum DriverInstallResult Fields Name Description Failed The driver installation failed. RebootRequired The driver installed successfully but a reboot is required. Success The driver was installed successfully."
  },
  "api/VpnSDK.DTO.OpenVpnConfiguration.html": {
    "href": "api/VpnSDK.DTO.OpenVpnConfiguration.html",
    "title": "Class OpenVpnConfiguration | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class OpenVpnConfiguration Class OpenVpnConfiguration. Describes the OpenVPN application configuration for the application. Inheritance Object OpenVpnConfiguration Namespace : VpnSDK.DTO Assembly : cs.temp.dll.dll Syntax public class OpenVpnConfiguration Properties CertificateAuthorityFilePath Gets or sets the file path (absolute or relative) to the Certificate Authority CRT file. Declaration public string CertificateAuthorityFilePath { get; set; } Property Value Type Description String ConfigurationFileOptions Declaration public Dictionary<string, string[]> ConfigurationFileOptions { get; set; } Property Value Type Description Dictionary < String , String []> LogLevel Gets or sets the OpenVPN executable log level. Declaration public OpenVpnLogLevel LogLevel { get; set; } Property Value Type Description OpenVpnLogLevel The OpenVPN executable log level. OpenVpnDirectory Gets or sets the OpenVPN directory. Declaration public string OpenVpnDirectory { get; set; } Property Value Type Description String The OpenVPN directory. OpenVpnExecutableFileName Gets or sets the file name of the OpenVPN executable. Declaration public string OpenVpnExecutableFileName { get; set; } Property Value Type Description String TapDeviceDescription Gets or sets the TAP device description. This refers to the network adapter that OpenVPN uses. Declaration public string TapDeviceDescription { get; set; } Property Value Type Description String The TAP device description."
  },
  "api/VpnSDK.ConnectionAlreadyEstablishedException.html": {
    "href": "api/VpnSDK.ConnectionAlreadyEstablishedException.html",
    "title": "Class ConnectionAlreadyEstablishedException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class ConnectionAlreadyEstablishedException Exception ConnectionAlreadyEstablishedException. Fires when a VPN connection request is called when a connection is already established. Inheritance Object BaseSDKException VpnException ConnectionAlreadyEstablishedException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class ConnectionAlreadyEstablishedException : VpnException Constructors ConnectionAlreadyEstablishedException(String) Initializes a new instance of the ConnectionAlreadyEstablishedException class. Declaration public ConnectionAlreadyEstablishedException(string message) Parameters Type Name Description String message The message to pass to the calling code ConnectionAlreadyEstablishedException(String, Exception) Initializes a new instance of the ConnectionAlreadyEstablishedException class. Declaration public ConnectionAlreadyEstablishedException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException"
  },
  "api/VpnSDK.ReconnectOnPowerEventException.html": {
    "href": "api/VpnSDK.ReconnectOnPowerEventException.html",
    "title": "Class ReconnectOnPowerEventException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class ReconnectOnPowerEventException Exception ReconnectOnPowerEventException. Fires when failed to reconnect on power event. Inheritance Object BaseSDKException VpnException ReconnectOnPowerEventException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class ReconnectOnPowerEventException : VpnException Constructors ReconnectOnPowerEventException(String) Initializes a new instance of the ReconnectOnPowerEventException class. Declaration public ReconnectOnPowerEventException(string message) Parameters Type Name Description String message The message to pass to the calling code. ReconnectOnPowerEventException(String, Exception) Initializes a new instance of the ReconnectOnPowerEventException class. Declaration public ReconnectOnPowerEventException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code. Exception inner the exception that we are passing up. Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.InvalidConfigurationException.html": {
    "href": "api/VpnSDK.InvalidConfigurationException.html",
    "title": "Class InvalidConfigurationException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class InvalidConfigurationException Exception InvalidConfigurationException. Fires when SDK configuration is invalid due to missing parameters or an unconfigured VPN protocol is requested. Inheritance Object BaseSDKException CoreException InvalidConfigurationException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class InvalidConfigurationException : CoreException Constructors InvalidConfigurationException(String) Initializes a new instance of the InvalidConfigurationException class. Declaration public InvalidConfigurationException(string message) Parameters Type Name Description String message The message to pass to the calling code InvalidConfigurationException(String, Exception) Initializes a new instance of the InvalidConfigurationException class. Declaration public InvalidConfigurationException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception"
  },
  "api/VpnSDK.ConnectionException.html": {
    "href": "api/VpnSDK.ConnectionException.html",
    "title": "Class ConnectionException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class ConnectionException Exception ConnectionException. Fires when a VPN connection has failed. Inheritance Object BaseSDKException VpnException ConnectionException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class ConnectionException : VpnException Constructors ConnectionException(String) Initializes a new instance of the ConnectionException class. Declaration public ConnectionException(string message) Parameters Type Name Description String message The message to pass to the calling code ConnectionException(String, Exception) Initializes a new instance of the ConnectionException class. Declaration public ConnectionException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.APIException.html": {
    "href": "api/VpnSDK.APIException.html",
    "title": "Class APIException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class APIException Exception VpnSDKOAuthException. Fired when an authentication request fails due to API issues. Inheritance Object BaseSDKException HTTPException APIException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class APIException : HTTPException Constructors APIException(String) Initializes a new instance of the APIException class. Declaration public APIException(string message) Parameters Type Name Description String message The message to pass to the calling code APIException(String, Exception) Initializes a new instance of the APIException class. Declaration public APIException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException HTTPException"
  },
  "api/VpnSDK.Extensions.ExceptionExtensions.html": {
    "href": "api/VpnSDK.Extensions.ExceptionExtensions.html",
    "title": "Class ExceptionExtensions | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class ExceptionExtensions ExceptionExtensions class. Provides extension methods to help gather exception info. Inheritance Object ExceptionExtensions Namespace : VpnSDK.Extensions Assembly : cs.temp.dll.dll Syntax public static class ExceptionExtensions Methods GetAllExceptionMessages(Exception) Gets all exception messages. Declaration public static IEnumerable<string> GetAllExceptionMessages(this Exception ex) Parameters Type Name Description Exception ex The exception. Returns Type Description IEnumerable < String > IEnumerable<System.String>. GetAllExceptions(Exception) Gets all inner exceptions. Declaration public static IEnumerable<Exception> GetAllExceptions(this Exception ex) Parameters Type Name Description Exception ex The exception. Returns Type Description IEnumerable < Exception > IEnumerable<Exception>."
  },
  "api/VpnSDK.Enums.NetworkConnectionType.html": {
    "href": "api/VpnSDK.Enums.NetworkConnectionType.html",
    "title": "Enum NetworkConnectionType | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum NetworkConnectionType Enum NetworkConnectionType. Defines types of connections that can be used for a VPN tunnel. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum NetworkConnectionType Fields Name Description IKEv2 Internet Key Exchange Version 2 (IPSec) L2TP Layer 2 Tunneling Protocol (IPSec) OpenVPN OpenVPN PPTP Point-to-Point Tunneling Protocol SSTP Secure Socket Tunneling Protocol"
  },
  "api/VpnSDK.Enums.AccountStatus.html": {
    "href": "api/VpnSDK.Enums.AccountStatus.html",
    "title": "Enum AccountStatus | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum AccountStatus Enum AccountStatus. Refers to what status the account has on the API. Values \"Paid\", \"Expired\", \"Trial\" and \"Free\" should be ignored as they only pertain to specific resellers who have been informed directly about these values. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum AccountStatus : short Fields Name Description Active The account is currently active and valid. CapReached The account has reached it's data cap. Closed The account has been closed permanently. Expired (Legacy / Unused) The account has expired. Free (Legacy / Unused) The account is a free account. Paid (Legacy / Unused) The account has been paid for. Paused The account has been paused. Pending The account is currently pending setup. Suspended The account has been suspended temporarily. Trial (Legacy / Unused) The account is on a trial. Unknown The account status is unknown."
  },
  "api/VpnSDK.DTO.html": {
    "href": "api/VpnSDK.DTO.html",
    "title": "Namespace VpnSDK.DTO | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Namespace VpnSDK.DTO Classes NetworkGeolocation Class NetworkGeolocation. Represents a network geolocation determined from a GeoIP service. OpenVpnConfiguration Class OpenVpnConfiguration. Describes the OpenVPN application configuration for the application. RasConfiguration Class RasConfiguration. Describes the RAS configuration used for RAS-based ( IKEv2 / SSTP ) VPN connections."
  },
  "api/VpnSDK.BaseSDKException.html": {
    "href": "api/VpnSDK.BaseSDKException.html",
    "title": "Class BaseSDKException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class BaseSDKException Class VpnSDKBaseException. Used as a base class for all SDK exceptions. Inheritance Object BaseSDKException CoreException HTTPException UnknownErrorException VpnException WFPException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public abstract class BaseSDKException : Exception Constructors BaseSDKException(String) Initializes a new instance of the BaseSDKException class. Declaration public BaseSDKException(string message) Parameters Type Name Description String message The message that describes the error. BaseSDKException(String, Exception) Initializes a new instance of the BaseSDKException class. Declaration public BaseSDKException(string message, Exception inner) Parameters Type Name Description String message The message. Exception inner The inner exception. Properties Type Gets the error type Declaration public virtual ErrorType Type { get; } Property Value Type Description ErrorType The error type."
  },
  "api/VpnSDK.WFPException.html": {
    "href": "api/VpnSDK.WFPException.html",
    "title": "Class WFPException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class WFPException Exception WFPException. Fired when any network filtering errors occur. Inheritance Object BaseSDKException WFPException Inherited Members BaseSDKException.Type Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class WFPException : BaseSDKException Constructors WFPException(String) Initializes a new instance of the WFPException class. Declaration public WFPException(string message) Parameters Type Name Description String message The message to pass to the calling code WFPException(String, Exception) Initializes a new instance of the WFPException class. Declaration public WFPException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up"
  },
  "api/VpnSDK.Interfaces.IRegion.html": {
    "href": "api/VpnSDK.Interfaces.IRegion.html",
    "title": "Interface IRegion | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IRegion Interface IRegion. Describes a region as an ILocation . Inherited Members ILocation.Id ILocation.CountryCode ILocation.CityCode ILocation.SearchName ILocation.PingMs ILocation.Country ILocation.City ILocation.Ping() Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IRegion : ILocation, INotifyPropertyChanged Properties GeoCoordinate Gets the geo coordinate that presents the region on a map. Declaration GeoCoordinate GeoCoordinate { get; } Property Value Type Description GeoCoordinate The current IRegion 's geo coordinate. Load Gets the user load of the region. Higher values mean that the server is nearing capacity. Declaration ushort? Load { get; } Property Value Type Description Nullable < UInt16 > The current user load between 0% to 100% as a flattened value. See Also ILocation"
  },
  "api/VpnSDK.Interfaces.IConnectionConfiguration.html": {
    "href": "api/VpnSDK.Interfaces.IConnectionConfiguration.html",
    "title": "Interface IConnectionConfiguration | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IConnectionConfiguration Interface IConnectionConfiguration. Provides an interface for a connection configuration. Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IConnectionConfiguration Properties ConnectionType Gets the connection type to use. ( OpenVPN, IKEv2, etc. ) Declaration NetworkConnectionType ConnectionType { get; } Property Value Type Description NetworkConnectionType"
  },
  "api/VpnSDK.Extensions.html": {
    "href": "api/VpnSDK.Extensions.html",
    "title": "Namespace VpnSDK.Extensions | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Namespace VpnSDK.Extensions Classes ExceptionExtensions ExceptionExtensions class. Provides extension methods to help gather exception info. LocationExtensions LocationExtensions class. Provides extension methods for locations. RegionLoadChecker Class RegionLoadChecker. Provides utilities for checking a locations load by averaging them all and providing a simple value."
  },
  "api/VpnSDK.CoreException.html": {
    "href": "api/VpnSDK.CoreException.html",
    "title": "Class CoreException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class CoreException Inheritance Object BaseSDKException CoreException EmptyAvailableVpnProtocolsException InvalidConfigurationException Inherited Members BaseSDKException.Type Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class CoreException : BaseSDKException Constructors CoreException(String) Initializes a new instance of the CoreException class. Declaration public CoreException(string message) Parameters Type Name Description String message The message that describes the error. CoreException(String, Exception) Initializes a new instance of the CoreException class. Declaration public CoreException(string message, Exception inner) Parameters Type Name Description String message The message. Exception inner The inner exception."
  },
  "api/VpnSDK.AuthenticationException.html": {
    "href": "api/VpnSDK.AuthenticationException.html",
    "title": "Class AuthenticationException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class AuthenticationException Exception AuthenticationException. Fired when an authentication request fails due to invalid credentials or Bad Request. Inheritance Object BaseSDKException HTTPException AuthenticationException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class AuthenticationException : HTTPException Constructors AuthenticationException(String) Initializes a new instance of the AuthenticationException class. Declaration public AuthenticationException(string message) Parameters Type Name Description String message The message to pass to the calling code AuthenticationException(String, Exception) Initializes a new instance of the AuthenticationException class. Declaration public AuthenticationException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException HTTPException"
  },
  "api/VpnSDK.OAuthException.html": {
    "href": "api/VpnSDK.OAuthException.html",
    "title": "Class OAuthException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class OAuthException Exception OAuthException. Fired when SDK is unable to refresh the access token. Inheritance Object BaseSDKException HTTPException OAuthException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class OAuthException : HTTPException Constructors OAuthException(String) Initializes a new instance of the OAuthException class. Declaration public OAuthException(string message) Parameters Type Name Description String message The message to pass to the calling code OAuthException(String, Exception) Initializes a new instance of the OAuthException class. Declaration public OAuthException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also HTTPException APIException"
  },
  "api/VpnSDK.NullLocationException.html": {
    "href": "api/VpnSDK.NullLocationException.html",
    "title": "Class NullLocationException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class NullLocationException Exception NullLocationException. Fires when a null location is provided to an SDK method. Inheritance Object BaseSDKException VpnException NullLocationException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class NullLocationException : VpnException Constructors NullLocationException(String) Initializes a new instance of the NullLocationException class. Declaration public NullLocationException(string message) Parameters Type Name Description String message The message to pass to the calling code NullLocationException(String, Exception) Initializes a new instance of the NullLocationException class. Declaration public NullLocationException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.Interfaces.IUser.html": {
    "href": "api/VpnSDK.Interfaces.IUser.html",
    "title": "Interface IUser | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IUser Interface IUser. Provides an interface for API users/customers. Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IUser : INotifyPropertyChanged Properties EmailAddress Gets the email address provided by the API. This will be set to null if third-party authentication is used. Declaration string EmailAddress { get; } Property Value Type Description String The email address. IsValid Gets a value indicating whether returns true if the user object is valid. Declaration bool IsValid { get; } Property Value Type Description Boolean true if this instance is valid; otherwise, false . Status Gets the current account status. Declaration AccountStatus Status { get; } Property Value Type Description AccountStatus The status. SubscriptionExpiry Gets the subscription expiry date if known. Declaration DateTime? SubscriptionExpiry { get; } Property Value Type Description Nullable < DateTime > The subscription expiry. VpnCredential Gets the VPN server credential. Declaration NetworkCredential VpnCredential { get; } Property Value Type Description NetworkCredential The VPN credential."
  },
  "api/VpnSDK.Enums.LoadLevel.html": {
    "href": "api/VpnSDK.Enums.LoadLevel.html",
    "title": "Enum LoadLevel | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum LoadLevel Enum LoadLevel. Represents the current user load level of a region. The lower, the better. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum LoadLevel Fields Name Description High High user load. Invalid Invalid load level. Low Low user load. Medium Normal user load."
  },
  "api/VpnSDK.TapAdapterException.html": {
    "href": "api/VpnSDK.TapAdapterException.html",
    "title": "Class TapAdapterException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class TapAdapterException Exception TapAdapterException. Fired when an OpenVPN TAP adapter is not installed or not working correctly. Inheritance Object BaseSDKException VpnException TapAdapterException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class TapAdapterException : VpnException Constructors TapAdapterException(String) Initializes a new instance of the TapAdapterException class. Declaration public TapAdapterException(string message) Parameters Type Name Description String message The message. TapAdapterException(String, Exception) Initializes a new instance of the TapAdapterException class. Declaration public TapAdapterException(string message, Exception inner) Parameters Type Name Description String message The message. Exception inner The inner exception. Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.SDKEventHandler-1.html": {
    "href": "api/VpnSDK.SDKEventHandler-1.html",
    "title": "Delegate SDKEventHandler<T> | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Delegate SDKEventHandler<T> Delegate SDKEventHandler. Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public delegate void SDKEventHandler<in T>(ISDK sender, T args); Parameters Type Name Description ISDK sender The SDK instance that has fired the event. T args The event payload. Type Parameters Name Description T The event payload type."
  },
  "api/VpnSDK.Enums.RefreshLocationListStatus.html": {
    "href": "api/VpnSDK.Enums.RefreshLocationListStatus.html",
    "title": "Enum RefreshLocationListStatus | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum RefreshLocationListStatus Enum RefreshLocationListStatus. Describes the status of a server list refresh operation. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum RefreshLocationListStatus Fields Name Description Error The list refresh failed. Refreshed The list refresh is complete. Refreshing The list is being refreshed."
  },
  "api/VpnSDK.Enums.ErrorType.html": {
    "href": "api/VpnSDK.Enums.ErrorType.html",
    "title": "Enum ErrorType | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum ErrorType Enum ErrorType. Represents the different types of errors that the SDK can return for localization purposes. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum ErrorType Fields Name Description ApiAuthenticationError An authentication request fails due to invalid credentials or Bad Request. ApiError Authentication request failed due to API issues. ApiFetchLocationsError Failed to refresh locations list. ApiNotAuthorizedError User is not logged in. ApiOAuthError Failed to refresh access token. CoreInvalidConfiguration VpnSDK is not configured correctly. CoreNoAvailableProtocols There's no VPN protocols available on this system. None No error. ReconnectOnPowerEventException Failed to reconnect after power event. TAPAdapterError TAP Adapter is not installed or not working correctly. Unknown Unknown error type. VpnAlreadyConnected VPN connection is already established. VpnAuthenticationError Failed to authenticate the current user against the selected VPN server. User's credentials are expired? VpnConnectionError VPN connection raised an exception, connection was closed. Happens during connection process. VpnConnectionUnexpectedlyDisconnected VPN connection disconnected unexpectedly. VpnLocationIsNull A null location is provided to an SDK method. VpnUnsupportedProtocolError Failed to create a connection using VPN protocol that is not supported."
  },
  "api/VpnSDK.UnsupportedProtocolException.html": {
    "href": "api/VpnSDK.UnsupportedProtocolException.html",
    "title": "Class UnsupportedProtocolException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class UnsupportedProtocolException Exception UnsupportedProtocolException. Fired when a connection request is using an invalid or unconfigured protocol. Inheritance Object BaseSDKException VpnException UnsupportedProtocolException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class UnsupportedProtocolException : VpnException Constructors UnsupportedProtocolException(String) Initializes a new instance of the UnsupportedProtocolException class. Declaration public UnsupportedProtocolException(string message) Parameters Type Name Description String message The message to pass to the calling code UnsupportedProtocolException(String, Exception) Initializes a new instance of the UnsupportedProtocolException class. Declaration public UnsupportedProtocolException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.SDKBuilder-1.html": {
    "href": "api/VpnSDK.SDKBuilder-1.html",
    "title": "Class SDKBuilder<T> | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class SDKBuilder<T> Class SDKBuilder. Used to build an instance of a ISDK . Inheritance Object SDKBuilder<T> Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class SDKBuilder<T> where T : ISDK Type Parameters Name Description T ISDK type. Methods Create() Creates an based off the parameters chained before the call. Declaration public T Create() Returns Type Description T An instance of . SetApiBaseUrl(String[]) Sets the API base URL. Declaration public SDKBuilder<T> SetApiBaseUrl(params string[] value) Parameters Type Name Description String [] value The API base URLs. Returns Type Description SDKBuilder <T> a builder instance. SetApiKey(String) Sets the SDK API key. Declaration public SDKBuilder<T> SetApiKey(string value) Parameters Type Name Description String value the API key. Returns Type Description SDKBuilder <T> a builder instance. SetApplicationName(String) Sets the name of the application. Declaration public SDKBuilder<T> SetApplicationName(string value) Parameters Type Name Description String value The value. Returns Type Description SDKBuilder <T> TBuilder. SetAuthenticationToken(String) Sets the authentication token. Declaration public SDKBuilder<T> SetAuthenticationToken(string value) Parameters Type Name Description String value The value. Returns Type Description SDKBuilder <T> TBuilder. SetAutomaticRefreshTokenHandling(Boolean) Declaration public SDKBuilder<T> SetAutomaticRefreshTokenHandling(bool automaticallyRefresh) Parameters Type Name Description Boolean automaticallyRefresh Returns Type Description SDKBuilder <T> SetBuildMockup(Boolean) Declaration public SDKBuilder<T> SetBuildMockup(bool value) Parameters Type Name Description Boolean value Returns Type Description SDKBuilder <T> SetOpenVpnConfiguration(OpenVpnConfiguration) Sets the configuration for the Open VPN connection type. Declaration public SDKBuilder<T> SetOpenVpnConfiguration(OpenVpnConfiguration value) Parameters Type Name Description OpenVpnConfiguration value The OpenVPN configuration. Returns Type Description SDKBuilder <T> The current builder instance. SetRasConfiguration(RasConfiguration) Sets the RAS Configuration. Declaration public SDKBuilder<T> SetRasConfiguration(RasConfiguration value) Parameters Type Name Description RasConfiguration value the configuration. Returns Type Description SDKBuilder <T> a builder instance. SetServerListCache(Nullable<TimeSpan>) Sets the time interval for server list data cache. If not set, SDK wont cache the data. Declaration public SDKBuilder<T> SetServerListCache(TimeSpan? time) Parameters Type Name Description Nullable < TimeSpan > time Time interval. Returns Type Description SDKBuilder <T> a builder instance. SetSynchronizationContext(SynchronizationContext) Sets synchronization context. Declaration public SDKBuilder<T> SetSynchronizationContext(SynchronizationContext context) Parameters Type Name Description SynchronizationContext context . Returns Type Description SDKBuilder <T> a builder instance. Validate() Validates the configuration before creating the SDK instance. The validation done depends on the type of client. Declaration public void Validate() Exceptions Type Condition InvalidConfigurationException Either the API Key, application name or authentication token were not set. EmptyAvailableVpnProtocolsException No VPN protocols were configured."
  },
  "api/VpnSDK.Interfaces.IConnectionInfo.html": {
    "href": "api/VpnSDK.Interfaces.IConnectionInfo.html",
    "title": "Interface IConnectionInfo | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IConnectionInfo Interface IConnectionInfo. Describes the current connection info. Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IConnectionInfo Properties Configuration Declaration IConnectionConfiguration Configuration { get; } Property Value Type Description IConnectionConfiguration Location Declaration ILocation Location { get; } Property Value Type Description ILocation Protocol Declaration NetworkConnectionType Protocol { get; } Property Value Type Description NetworkConnectionType"
  },
  "api/VpnSDK.Enums.ConnectionStatus.html": {
    "href": "api/VpnSDK.Enums.ConnectionStatus.html",
    "title": "Enum ConnectionStatus | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum ConnectionStatus Enum ConnectionStatus. Describes the states of a VPN connection. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum ConnectionStatus Fields Name Description Connected Connected successfully. Connecting Connecting to the server. Disconnected Disconnected. Disconnecting Disconnecting."
  },
  "index.html": {
    "href": "index.html",
    "title": "VpnSDK v2 .NET Documentation | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "VpnSDK v2 .NET Documentation Introduction VpnSDK v2 provides an implementation of the WLVPN service flow (both API and VPN connectivity) through standard .NET TPL/asynchronous patterns. VpnSDK is built for .NET Framework 4.6.1-4.7.2 and targets the desktop version of Windows 7 and up. A reference implementation in a GUI application can be found here. Confidentiality The contents of this document cannot be duplicated, copied, reprinted, transferred, distributed, or loaned, in whole or in part, without the prior approval of WLVPN. This document contains confidential and proprietary information of WLVPN, and is protected under confidentiality agreements as well as the intellectual property laws of the United States and of other countries. No part of this document may be released, distributed, transmitted, or reproduced in any form, including by any electronic or mechanical means and by including within information storage and retrieval systems, without written permission from WLVPN."
  },
  "articles/quickstart.html": {
    "href": "articles/quickstart.html",
    "title": "Quick Start | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Quick Start Introduction VpnSDK v2 is a pure async/TPL library that abstracts all WLVPN and VPN connectivity in to an easy to use SDK. In the following code example, the simplicity of getting started is shown through a code example that you can use as a base for a console application. It is suggested that you read through the code and try running it yourself, make your own adjustments along the way to get a good feel for how it works. Getting Started Assuming you have added the NuGet repository provided to you by your account holder, create an empty .NET Console application targeting .NET 4.6.2 at minimum. You will also require a version of Visual Studio that has support for C# 7.1. If this isn't possible, you will need to adapt the async Task Main() method to create a method where you can run async operations. In your new project import \"VpnSDK 2.0.x\" from NuGet and copy the following code. You will need to read through the code and provide your own API keys and authorization tokens. The Code using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Web; using VpnSDK; using VpnSDK.Enums; using VpnSDK.Interfaces; namespace WLVPN.Example { class Program { public static string WLVPN_API_KEY = \"ASK_YOUR_ACCOUNT_MANAGER_FOR_THIS\"; public static string WLVPN_AUTH_TOKEN = \"@ASK_YOUR_ACCOUNT_MANAGER_FOR_THIS\"; public static string WLVPN_USERNAME = \"FAKE\"; public static string WLVPN_PASSWORD = \"FAKE\"; static async Task Main(string[] args) { // Build an SDK instance using the info your account manager has provided. // If you do not have these, please contact WLVPN. ISDK sdk = null; try { sdk = new SDKBuilder<ISDK>().SetApiKey(WLVPN_API_KEY).SetAuthenticationToken(WLVPN_AUTH_TOKEN) .SetApplicationName(\"Console Example\").Create(); } catch(Exception e) { Exit(e.Message); } WriteInfo(\"SDK instance constructed.\"); WriteInfo(\"Ready to authenticate.\"); // Using your WLVPN customer credentials, authenticate against the WLVPN API. try { await sdk.Login(WLVPN_USERNAME, WLVPN_PASSWORD); } catch (Exception e) { Exit($\"Unable to authenticate. {e.Message}\"); } // You can access the users basic info using the User object in the SDK. // You can also get the users current GeoIP information if it is important to your UI/UX. WriteInfo($\"Authenticated user: {sdk.User.VpnCredential.UserName} (Status: {sdk.User.Status.ToString()}) IP: {sdk.CurrentNetworkGeolocation.IPAddress}\"); // All of the SDK locations are now available and exposed through an ObservableCollection. // This acts the same as any other collection except you can get events on when it updates // or use it with popular libraries such as Reactive Extensions or DynamicData. WriteInfo($\"{sdk.Locations.Count} locations detected. Total countries: {sdk.Locations.GroupBy(x => x.CountryCode).Count()} and total cities: {sdk.Locations.GroupBy(x => x.City).Count()}\"); // To connect to these locations, we use the Connect() method in the SDK to establish the connection. // Before we connect though, we need to set up what type of VPN connection the user will use. // Using the RasConnectionConfigurationBuilder which is responsible for IKEv2 connections, we will build an IConnectionConfiguration object // for the Connect method. IConnectionConfiguration rasConfiguration = new RasConnectionConfigurationBuilder() .SetConnectionType(NetworkConnectionType.IKEv2).Build(); // Now that we have a configuration object, we can connect. First let's get an ILocation from our Locations collection. ILocation location = sdk.Locations.First(x => x.Country == \"Canada\"); // As you can see we've picked the first server in Canada that has appeared in the collection. // In a standard application you will want to expose this list for user choice. // As a side note, if you pass a null instead of an ILocation or the 'Best Available' ILocation, the best available server for the user will be chosen. try { WriteInfo($\"Connecting to {location} with {rasConfiguration.ConnectionType}.\"); // Pass the location and configuration to the connect method and await it. If the connection fails, an exception is thrown. await sdk.Connect(location, rasConfiguration); WriteInfo(\"Connection established. Press enter to disconnect.\"); System.Console.ReadLine(); // Now await the disconnection. await sdk.Disconnect(); } catch (Exception e) { // Unfortunately the VPN connection failed, possibly due to invalid credentials or network issues. Exit($\"The VPN connection was unable to be established. Error: {e.Message}\"); } finally { // As a just in case, the finally block is used to make sure the VPN connection is disconnected. if (!sdk.IsDisconnecting) { await sdk.Disconnect(); } } WriteInfo(\"You have authenticated, retrieved a server, connected to it and disconnected with just a few methods.\"); WriteInfo(\"We can't wait to see what you do next.\"); // There are a lot more features available throughout the SDK that do not fit the scope of this quick example. // Please refer to the API documentation, our ExampleApp and ConsumerVPN repositories for real world examples of using the SDK. Exit(); } // This is just a utility method to make logging more simple. static void WriteInfo(string line) { System.Console.WriteLine($\"[Example SDK] {line}\"); } // This is a utility to help write an error message and quit the application. static void Exit(string error = null) { if (!string.IsNullOrEmpty(error)) { WriteInfo($\"Failed to execute operation. {error}\"); } System.Console.WriteLine(\"Press enter to exit...\"); System.Console.ReadLine(); Environment.Exit(0); } } } Conclusion As you can see, the WLVPN SDK has been simplified from previous versions by ensuring that you can use just the standard .NET Framework library and start building your application rapidly. For more information, consider studying our ExampleApp found at https://github.com/wlvpn/ExampleApp-Windows/tree/v2 or reviewing the API reference. Due to the simplicity in version 2 of the SDK, many barriers have been removed, simple events have replaced observable chaining and going from nothing to a working VPN connection is faster than ever before."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "| VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "WLVPN VpnSDK .NET Guides Provided for you are guides and articles written by the WLVPN team to help you integrate VpnSDK rapidly in to your project and gain a better understanding of all the features provided by VpnSDK."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "API Documentation On the left-hand side you will find in-depth information on all the classes, objects and enums provided with VpnSDK. To get started, the SDKBuilder<ISDK> class and ISDK interface are used for most operations in the SDK. SDKBuilder provides the ability to construct an SDK instance and ISDK is how the instance is used."
  },
  "api/VpnSDK.Interfaces.IBestAvailable.html": {
    "href": "api/VpnSDK.Interfaces.IBestAvailable.html",
    "title": "Interface IBestAvailable | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IBestAvailable Interface IBestAvailable. Tagging interface that describes a special ILocation that always finds the 'best available' location for the user. Inherited Members ILocation.Id ILocation.CountryCode ILocation.CityCode ILocation.SearchName ILocation.PingMs ILocation.Country ILocation.City ILocation.Ping() Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IBestAvailable : ILocation, INotifyPropertyChanged Properties BestRegion Gets the best region to be used at connect time. Declaration IRegion BestRegion { get; } Property Value Type Description IRegion The current best region. If null, haversine is used at connect time to determine the best region. See Also ILocation"
  },
  "api/VpnSDK.Extensions.RegionLoadChecker.html": {
    "href": "api/VpnSDK.Extensions.RegionLoadChecker.html",
    "title": "Class RegionLoadChecker | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class RegionLoadChecker Class RegionLoadChecker. Provides utilities for checking a locations load by averaging them all and providing a simple value. Inheritance Object RegionLoadChecker Namespace : VpnSDK.Extensions Assembly : cs.temp.dll.dll Syntax public static class RegionLoadChecker Methods GetRegionLoadLevel(Nullable<UInt16>) Get from a Region's load level. Declaration public static LoadLevel GetRegionLoadLevel(this ushort? value) Parameters Type Name Description Nullable < UInt16 > value The number value representing the load level. Returns Type Description LoadLevel The appropriate LoadLevel associated with the value."
  },
  "api/VpnSDK.UnknownErrorException.html": {
    "href": "api/VpnSDK.UnknownErrorException.html",
    "title": "Class UnknownErrorException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class UnknownErrorException UnknownErrorException. Fires when an unknown related error occurs. Inheritance Object BaseSDKException UnknownErrorException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class UnknownErrorException : BaseSDKException Constructors UnknownErrorException(String) Declaration public UnknownErrorException(string message) Parameters Type Name Description String message UnknownErrorException(String, Exception) Declaration public UnknownErrorException(string message, Exception inner) Parameters Type Name Description String message Exception inner Properties Type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType Overrides BaseSDKException.Type"
  },
  "api/VpnSDK.DTO.NetworkGeolocation.html": {
    "href": "api/VpnSDK.DTO.NetworkGeolocation.html",
    "title": "Class NetworkGeolocation | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class NetworkGeolocation Class NetworkGeolocation. Represents a network geolocation determined from a GeoIP service. Inheritance Object NetworkGeolocation Namespace : VpnSDK.DTO Assembly : cs.temp.dll.dll Syntax public class NetworkGeolocation Properties City Gets the name of the current city. Declaration public string City { get; } Property Value Type Description String The city. Country Gets the name of the current country. Declaration public string Country { get; } Property Value Type Description String The country. CountryCode Gets the ISO Alpha-2 country code for the current Country . Declaration public string CountryCode { get; } Property Value Type Description String The ISO Alpha-2 country code. IPAddress Gets the current IP address. Declaration public IPAddress IPAddress { get; } Property Value Type Description IPAddress The current IP address. Latitude Gets the latitude. Declaration public decimal Latitude { get; } Property Value Type Description Decimal The latitude. Longitude Gets the longitude. Declaration public decimal Longitude { get; } Property Value Type Description Decimal The longitude. Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Implicit(GeoIP to NetworkGeolocation) Performs an implicit conversion from to NetworkGeolocation . Declaration public static implicit operator NetworkGeolocation(GeoIP geoIp) Parameters Type Name Description GeoIP geoIp The Zorg GeoIP. Returns Type Description NetworkGeolocation The result of the conversion."
  },
  "api/VpnSDK.Enums.OpenVpnLogLevel.html": {
    "href": "api/VpnSDK.Enums.OpenVpnLogLevel.html",
    "title": "Enum OpenVpnLogLevel | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum OpenVpnLogLevel Enum OpenVpnLogLevel. Refers to what level of logging OpenVPN should use. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum OpenVpnLogLevel Fields Name Description Fatal Fatal errors only. Info Standard information. Normal Normal logging level. PacketDebug Debug logging with per-packet info. Trace Extreme trace debugging, do not use this unless you know what you are doing. VerboseDebug Verbose debugging. This should be avoided."
  },
  "api/VpnSDK.html": {
    "href": "api/VpnSDK.html",
    "title": "Namespace VpnSDK | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Namespace VpnSDK Classes APIException Exception VpnSDKOAuthException. Fired when an authentication request fails due to API issues. AuthenticationException Exception AuthenticationException. Fired when an authentication request fails due to invalid credentials or Bad Request. BaseSDKException Class VpnSDKBaseException. Used as a base class for all SDK exceptions. ConnectionAlreadyEstablishedException Exception ConnectionAlreadyEstablishedException. Fires when a VPN connection request is called when a connection is already established. ConnectionException Exception ConnectionException. Fires when a VPN connection has failed. ConnectionTerminatedException Exception ConnectionTerminatedException. Fires when a VPN connection is terminated by an external source. CoreException EmptyAvailableVpnProtocolsException Exception EmptyAvailableVpnProtocolsException. Fires when SDK construction has detected that no VPN protocols are available on the machine due to OS configuration issues or misconfiguration of the SDK. FetchLocationsException Exception FetchLocationsException. Fires when location fetching has failed. HTTPException Exception HTTPException. Fired as a base exception for any HTTP/S issue such as server failures, reach-ability problems and API request rejections. InvalidConfigurationException Exception InvalidConfigurationException. Fires when SDK configuration is invalid due to missing parameters or an unconfigured VPN protocol is requested. NotAuthorizedException Exception NotAuthorizedException. Fired when API requests are fired before authenticating a user. NullLocationException Exception NullLocationException. Fires when a null location is provided to an SDK method. OAuthException Exception OAuthException. Fired when SDK is unable to refresh the access token. OpenVpnConnectionConfigurationBuilder Class OpenVpnConnectionConfigurationBuilder. Builder for an OpenVPN IConnectionConfiguration object. RasConnectionConfigurationBuilder Class RasConnectionConfigurationBuilder. Builder for a RAS-based IConnectionConfiguration object. ReconnectOnPowerEventException Exception ReconnectOnPowerEventException. Fires when failed to reconnect on power event. SDKBuilder<T> Class SDKBuilder. Used to build an instance of a ISDK . TapAdapterException Exception TapAdapterException. Fired when an OpenVPN TAP adapter is not installed or not working correctly. UnknownErrorException UnknownErrorException. Fires when an unknown related error occurs. UnsupportedProtocolException Exception UnsupportedProtocolException. Fired when a connection request is using an invalid or unconfigured protocol. VPNAuthenticationException Exception VPNAuthenticationException. Fired when an authentication request fails due to API issues. VpnException Exception VpnException. Fired when any VPN connection error occurs. WFPException Exception WFPException. Fired when any network filtering errors occur. Delegates SDKChangeEventHandler<T> Delegate SDKChangeEventHandler. Used when state has changed from previous to current. SDKEventHandler Delegate SDKEventHandler. SDKEventHandler<T> Delegate SDKEventHandler. SDKOperationEventHandler Delegate SDKOperationEventHandler. Represents the current state of an operation. SDKOperationEventHandler<T> Delegate SDKOperationEventHandler. Represents the current state of an operation."
  },
  "api/VpnSDK.SDKOperationEventHandler.html": {
    "href": "api/VpnSDK.SDKOperationEventHandler.html",
    "title": "Delegate SDKOperationEventHandler | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Delegate SDKOperationEventHandler Delegate SDKOperationEventHandler. Represents the current state of an operation. Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public delegate void SDKOperationEventHandler(ISDK sender, OperationStatus status); Parameters Type Name Description ISDK sender The SDK instance that has fired the event OperationStatus status The current operation status."
  },
  "api/VpnSDK.SDKChangeEventHandler-1.html": {
    "href": "api/VpnSDK.SDKChangeEventHandler-1.html",
    "title": "Delegate SDKChangeEventHandler<T> | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Delegate SDKChangeEventHandler<T> Delegate SDKChangeEventHandler. Used when state has changed from previous to current. Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public delegate void SDKChangeEventHandler<in T>(ISDK sender, T previous, T current); Parameters Type Name Description ISDK sender The SDK instance that has fired the event. T previous The previous state. T current The current state. Type Parameters Name Description T The state type."
  },
  "api/VpnSDK.Helpers.VpnProtocolDiagnostics.html": {
    "href": "api/VpnSDK.Helpers.VpnProtocolDiagnostics.html",
    "title": "Class VpnProtocolDiagnostics | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class VpnProtocolDiagnostics Class VpnProtocolDiagnostics. Provides utilities for diagnosing VPN protocol issues. Inheritance Object VpnProtocolDiagnostics Namespace : VpnSDK.Helpers Assembly : cs.temp.dll.dll Syntax public class VpnProtocolDiagnostics Methods DiagnoseProtocolsAvailability(OpenVpnConfiguration, RasConfiguration, Dictionary<NetworkConnectionType, Boolean>) Diagnoses the protocols availability. Declaration public static void DiagnoseProtocolsAvailability(OpenVpnConfiguration openVpnConfiguration, RasConfiguration rasConfiguration, Dictionary<NetworkConnectionType, bool> availableProtocols) Parameters Type Name Description OpenVpnConfiguration openVpnConfiguration The Open VPN configuration. RasConfiguration rasConfiguration The RAS configuration. Dictionary < NetworkConnectionType , Boolean > availableProtocols The available protocols."
  },
  "api/VpnSDK.VpnException.html": {
    "href": "api/VpnSDK.VpnException.html",
    "title": "Class VpnException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class VpnException Exception VpnException. Fired when any VPN connection error occurs. Inheritance Object BaseSDKException VpnException ConnectionAlreadyEstablishedException ConnectionException ConnectionTerminatedException NullLocationException ReconnectOnPowerEventException TapAdapterException UnsupportedProtocolException VPNAuthenticationException Inherited Members BaseSDKException.Type Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class VpnException : BaseSDKException Constructors VpnException(String) Initializes a new instance of the VpnException class. Declaration public VpnException(string message) Parameters Type Name Description String message The message to pass to the calling code VpnException(String, Exception) Initializes a new instance of the VpnException class. Declaration public VpnException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up"
  },
  "api/VpnSDK.RasConnectionConfigurationBuilder.html": {
    "href": "api/VpnSDK.RasConnectionConfigurationBuilder.html",
    "title": "Class RasConnectionConfigurationBuilder | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class RasConnectionConfigurationBuilder Class RasConnectionConfigurationBuilder. Builder for a RAS-based IConnectionConfiguration object. Inheritance Object RasConnectionConfigurationBuilder Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class RasConnectionConfigurationBuilder Methods Build() Builds this instance. Declaration public IConnectionConfiguration Build() Returns Type Description IConnectionConfiguration IConnectionConfiguration. SetConnectionType(NetworkConnectionType) Sets the type of the connection. Restricted to and . Declaration public RasConnectionConfigurationBuilder SetConnectionType(NetworkConnectionType connectionType) Parameters Type Name Description NetworkConnectionType connectionType Type of the connection. Returns Type Description RasConnectionConfigurationBuilder RasConnectionConfigurationBuilder."
  },
  "api/VpnSDK.Enums.OperationStatus.html": {
    "href": "api/VpnSDK.Enums.OperationStatus.html",
    "title": "Enum OperationStatus | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum OperationStatus Enum OperationStatus. Represents the current status of an operation. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum OperationStatus Fields Name Description Completed Failed InProgress"
  },
  "api/VpnSDK.Enums.AuthenticationStatus.html": {
    "href": "api/VpnSDK.Enums.AuthenticationStatus.html",
    "title": "Enum AuthenticationStatus | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum AuthenticationStatus Enum AuthenticationStatus. Describes the status of the user authentication process. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum AuthenticationStatus Fields Name Description Authenticated Authentication has successfully completed and credentials are valid. InProgress Operation in progress. NotAuthenticated The WLVPN API was not reachable or the credentials provided were invalid."
  },
  "api/VpnSDK.FetchLocationsException.html": {
    "href": "api/VpnSDK.FetchLocationsException.html",
    "title": "Class FetchLocationsException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class FetchLocationsException Exception FetchLocationsException. Fires when location fetching has failed. Inheritance Object BaseSDKException HTTPException FetchLocationsException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class FetchLocationsException : HTTPException Constructors FetchLocationsException(String) Initializes a new instance of the FetchLocationsException class. Declaration public FetchLocationsException(string message) Parameters Type Name Description String message The message to pass to the calling code FetchLocationsException(String, Exception) Initializes a new instance of the FetchLocationsException class. Declaration public FetchLocationsException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException HTTPException"
  },
  "api/VpnSDK.Enums.OpenVpnCipherType.html": {
    "href": "api/VpnSDK.Enums.OpenVpnCipherType.html",
    "title": "Enum OpenVpnCipherType | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Enum OpenVpnCipherType Enum OpenVpnCipherType. Describes what security ciphers are available to use with OpenVPN. Namespace : VpnSDK.Enums Assembly : cs.temp.dll.dll Syntax public enum OpenVpnCipherType Fields Name Description AES_128_CBC Advanced Encryption Standard / Rijndael encryption using 128-bit cipher block chaining. AES_256_CBC Advanced Encryption Standard / Rijndael encryption using 256-bit cipher block chaining."
  },
  "api/VpnSDK.Interfaces.ILocation.html": {
    "href": "api/VpnSDK.Interfaces.ILocation.html",
    "title": "Interface ILocation | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface ILocation Interface ILocation. Describes an interface for a generic location. Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface ILocation : INotifyPropertyChanged Properties City Gets the city of the location to connect to. This field may be empty on some location objects. Declaration string City { get; } Property Value Type Description String CityCode Gets the city code. Declaration string CityCode { get; } Property Value Type Description String The city code. Country Gets the country of the location to connect to. Declaration string Country { get; } Property Value Type Description String CountryCode Gets the country code. Declaration string CountryCode { get; } Property Value Type Description String The country code. Id Gets the identifier. Declaration string Id { get; } Property Value Type Description String The identifier. PingMs Gets the ping in milliseconds. Declaration ushort? PingMs { get; } Property Value Type Description Nullable < UInt16 > The ping in milliseconds, else null. SearchName Gets the string used for searching. Declaration string SearchName { get; } Property Value Type Description String The name to be used in searches. Methods Ping() Pings this instance. Declaration Task<ushort? > Ping() Returns Type Description Task < Nullable < UInt16 >> Task<System.Nullable<System.UInt16>>."
  },
  "api/VpnSDK.Helpers.BatchPingUtility.html": {
    "href": "api/VpnSDK.Helpers.BatchPingUtility.html",
    "title": "Class BatchPingUtility | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class BatchPingUtility Class BatchPingUtility. Provides utilities for batch pinging multiple locations in parallel. Inheritance Object BatchPingUtility Namespace : VpnSDK.Helpers Assembly : cs.temp.dll.dll Syntax public static class BatchPingUtility Methods Ping(ILocation[]) Pings all locations in parallel. Declaration public static Task Ping(params ILocation[] locations) Parameters Type Name Description ILocation [] locations Locations to ping. Returns Type Description Task Task."
  },
  "api/VpnSDK.DTO.RasConfiguration.html": {
    "href": "api/VpnSDK.DTO.RasConfiguration.html",
    "title": "Class RasConfiguration | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class RasConfiguration Class RasConfiguration. Describes the RAS configuration used for RAS-based ( IKEv2 / SSTP ) VPN connections. Inheritance Object RasConfiguration Namespace : VpnSDK.DTO Assembly : cs.temp.dll.dll Syntax public class RasConfiguration Properties RasDeviceDescription Gets or sets the device description used by Windows. Declaration public string RasDeviceDescription { get; set; } Property Value Type Description String UseConnectionTypeInName Gets or sets a value indicating whether to use the connection type in the VPN entry. Declaration public bool UseConnectionTypeInName { get; set; } Property Value Type Description Boolean true if using the connection type in VPN entry, otherwise, false ."
  },
  "api/VpnSDK.VPNAuthenticationException.html": {
    "href": "api/VpnSDK.VPNAuthenticationException.html",
    "title": "Class VPNAuthenticationException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class VPNAuthenticationException Exception VPNAuthenticationException. Fired when an authentication request fails due to API issues. Inheritance Object BaseSDKException VpnException VPNAuthenticationException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class VPNAuthenticationException : VpnException Constructors VPNAuthenticationException(String) Initializes a new instance of the VPNAuthenticationException class. Declaration public VPNAuthenticationException(string message) Parameters Type Name Description String message The message. VPNAuthenticationException(String, Exception) Initializes a new instance of the VPNAuthenticationException class. Declaration public VPNAuthenticationException(string message, Exception inner) Parameters Type Name Description String message The message. Exception inner The inner exception. Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException VpnException"
  },
  "api/VpnSDK.Interfaces.ISDK.html": {
    "href": "api/VpnSDK.Interfaces.ISDK.html",
    "title": "Interface ISDK | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface ISDK Interface ISDK. Provides an interface for the SDK APIs. Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface ISDK : INotifyPropertyChanged, IDisposable Properties ActiveConnectionInformation Gets the active connection information. Declaration IConnectionInfo ActiveConnectionInformation { get; } Property Value Type Description IConnectionInfo The active connection information, null if not connected. AllowLANTraffic Gets or sets a value indicating whether to allow LAN traffic even when AllowOnlyVPNConnectivity is enabled. Declaration bool AllowLANTraffic { get; set; } Property Value Type Description Boolean true if [allow LAN traffic]; otherwise, false . AllowOnlyVPNConnectivity Gets or sets a value indicating whether to allow only VPN connectivity and block standard Internet connections. Declaration bool AllowOnlyVPNConnectivity { get; set; } Property Value Type Description Boolean true if [allow only VPN connectivity]; otherwise, false . AvailableProtocols Gets the available VPN types. Declaration Dictionary<NetworkConnectionType, bool> AvailableProtocols { get; } Property Value Type Description Dictionary < NetworkConnectionType , Boolean > A dictionary where the key is what protocol and the value is whether it's available. CurrentNetworkGeolocation Gets the current network geolocation. Declaration NetworkGeolocation CurrentNetworkGeolocation { get; } Property Value Type Description NetworkGeolocation The current network geolocation when established, else null . DisableDNSLeakProtection Gets or sets a value indicating whether to disable DNS leak protection. Declaration bool DisableDNSLeakProtection { get; set; } Property Value Type Description Boolean DisableIPv6LeakProtection Gets or sets a value indicating whether to disable IPv6 leak protection. Declaration bool DisableIPv6LeakProtection { get; set; } Property Value Type Description Boolean IsConnected Gets a value indicating whether VPN connection established. Declaration bool IsConnected { get; } Property Value Type Description Boolean IsConnecting Gets a value indicating whether SDK is in the process of establishing a new connection. Declaration bool IsConnecting { get; } Property Value Type Description Boolean IsConnectionCancelled Gets a value indicating whether VPN connection process was cancelled. Declaration bool IsConnectionCancelled { get; } Property Value Type Description Boolean IsDisconnecting Gets a value indicating whether SDK is disconnecting from VPN server. Declaration bool IsDisconnecting { get; } Property Value Type Description Boolean IsDisposed Gets a value indicating whether object is disposed. Declaration bool IsDisposed { get; } Property Value Type Description Boolean Locations Gets the read only observable collection responsible for locations. Declaration ReadOnlyObservableCollection<ILocation> Locations { get; } Property Value Type Description ReadOnlyObservableCollection < ILocation > The locations. TapDriverInstalled Gets a value indicating whether TAP driver installed. Declaration bool TapDriverInstalled { get; } Property Value Type Description Boolean User Gets the user which was logged in. This property is null if user was not authorized. Declaration IUser User { get; } Property Value Type Description IUser Methods Connect(IEnumerable<ILocation>, IConnectionConfiguration, CancellationToken) Connects the user to the best VPN location in an enumerable using the specified configuration. Declaration Task Connect(IEnumerable<ILocation> locations, IConnectionConfiguration connectionConfiguration, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable < ILocation > locations The target locations. IConnectionConfiguration connectionConfiguration The protocol configuration parameters for the connection. CancellationToken cancellationToken The cancellation token responsible for canceling the connection. Returns Type Description Task A Task . Connect(ILocation, IConnectionConfiguration, CancellationToken) Connects the user to the VPN location specified using the specified configuration Declaration Task Connect(ILocation location, IConnectionConfiguration connectionConfiguration, CancellationToken cancellationToken = null) Parameters Type Name Description ILocation location The target location. IConnectionConfiguration connectionConfiguration The protocol configuration parameters for the connection. CancellationToken cancellationToken The cancellation token responsible for canceling the connection. Returns Type Description Task A Task . Disconnect() Disconnects the user from the active VPN connection. Declaration Task Disconnect() Returns Type Description Task A Task . InstallTapDriver() Installs the OpenVPN TAP driver. Removes existing TAP drivers if already installed. Declaration Task<DriverInstallResult> InstallTapDriver() Returns Type Description Task < DriverInstallResult > Task<DriverInstallResult>. Login(String, String) Logs the specified username and password against the WLVPN API. Declaration Task Login(string username, string password) Parameters Type Name Description String username The username. String password The password. Returns Type Description Task A Task . Logout() Logs out the current user. Declaration Task Logout() Returns Type Description Task A Task . RefreshServerInfo() Refreshes the server info manually. Declaration Task RefreshServerInfo() Returns Type Description Task A Task . RefreshUserToken() Refreshes the user token manually. Declaration Task RefreshUserToken() Returns Type Description Task A Task . Events AuthenticationCredentialsExpired Fires when a users authentication credentials have expired. Declaration event SDKEventHandler AuthenticationCredentialsExpired Event Type Type Description SDKEventHandler AuthenticationStatusChanged Fires when the authentication status of the active SDK user changes. Declaration event SDKEventHandler<AuthenticationStatus> AuthenticationStatusChanged Event Type Type Description SDKEventHandler < AuthenticationStatus > TapDeviceInstallationStatusChanged Occurs when the TAP device installation status changed. Declaration event SDKOperationEventHandler TapDeviceInstallationStatusChanged Event Type Type Description SDKOperationEventHandler UserLocationStatusChanged User location changed event. Declaration event SDKOperationEventHandler<NetworkGeolocation> UserLocationStatusChanged Event Type Type Description SDKOperationEventHandler < NetworkGeolocation > VpnConnectionStatusChanged Fires when the active VPN connection status changes. Provides what the status was previously and what it is now. Declaration event SDKChangeEventHandler<ConnectionStatus> VpnConnectionStatusChanged Event Type Type Description SDKChangeEventHandler < ConnectionStatus > Remarks When using this event, make sure to check if the before was Connected and the after is Disconnected. If this is the case, the VPN connection was unexpectedly disconnected for an unknown reason. Ensure to notify the user that this happened or automatically reconnect for them depending on your use case."
  },
  "api/VpnSDK.SDKOperationEventHandler-1.html": {
    "href": "api/VpnSDK.SDKOperationEventHandler-1.html",
    "title": "Delegate SDKOperationEventHandler<T> | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Delegate SDKOperationEventHandler<T> Delegate SDKOperationEventHandler. Represents the current state of an operation. Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public delegate void SDKOperationEventHandler<in T>(ISDK sender, OperationStatus status, T args); Parameters Type Name Description ISDK sender The SDK instance that has fired the event OperationStatus status The current operation status. T args The payload as a result of the operation. Type Parameters Name Description T The payload type."
  },
  "api/VpnSDK.SDKEventHandler.html": {
    "href": "api/VpnSDK.SDKEventHandler.html",
    "title": "Delegate SDKEventHandler | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Delegate SDKEventHandler Delegate SDKEventHandler. Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public delegate void SDKEventHandler(ISDK sender); Parameters Type Name Description ISDK sender The SDK instance that has fired the event."
  },
  "api/VpnSDK.NotAuthorizedException.html": {
    "href": "api/VpnSDK.NotAuthorizedException.html",
    "title": "Class NotAuthorizedException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class NotAuthorizedException Exception NotAuthorizedException. Fired when API requests are fired before authenticating a user. Inheritance Object BaseSDKException HTTPException NotAuthorizedException Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class NotAuthorizedException : HTTPException Constructors NotAuthorizedException(String) Initializes a new instance of the NotAuthorizedException class. Declaration public NotAuthorizedException(string message) Parameters Type Name Description String message The message to pass to the calling code NotAuthorizedException(String, Exception) Initializes a new instance of the NotAuthorizedException class. Declaration public NotAuthorizedException(string message, Exception inner) Parameters Type Name Description String message The message to pass to the calling code Exception inner the exception that we are passing up Properties Type Gets the error type Declaration public override ErrorType Type { get; } Property Value Type Description ErrorType The error type. Overrides BaseSDKException.Type See Also Exception BaseSDKException HTTPException"
  },
  "api/VpnSDK.Interfaces.IOpenVpnConnectionConfiguration.html": {
    "href": "api/VpnSDK.Interfaces.IOpenVpnConnectionConfiguration.html",
    "title": "Interface IOpenVpnConnectionConfiguration | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IOpenVpnConnectionConfiguration Interface IOpenVpnConnectionConfiguration. Provides an interface that contains OpenVPN specific options. Inherited Members IConnectionConfiguration.ConnectionType Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IOpenVpnConnectionConfiguration : IConnectionConfiguration Properties Cipher Gets or sets the cypher type to use Declaration OpenVpnCipherType Cipher { get; set; } Property Value Type Description OpenVpnCipherType Port Gets or sets remote port. Declaration ushort Port { get; set; } Property Value Type Description UInt16 ProtocolType Gets or sets the protocol type to use Declaration NetworkProtocolType ProtocolType { get; set; } Property Value Type Description NetworkProtocolType Scramble Gets or sets a value indicating whether scramble is enabled or not Declaration bool Scramble { get; set; } Property Value Type Description Boolean See Also IConnectionConfiguration"
  },
  "api/VpnSDK.HTTPException.html": {
    "href": "api/VpnSDK.HTTPException.html",
    "title": "Class HTTPException | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class HTTPException Exception HTTPException. Fired as a base exception for any HTTP/S issue such as server failures, reach-ability problems and API request rejections. Inheritance Object BaseSDKException HTTPException APIException AuthenticationException FetchLocationsException NotAuthorizedException OAuthException Inherited Members BaseSDKException.Type Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class HTTPException : BaseSDKException Constructors HTTPException(String) Initializes a new instance of the HTTPException class. Declaration public HTTPException(string message) Parameters Type Name Description String message The message that describes the error. HTTPException(String, Exception) Initializes a new instance of the HTTPException class. Declaration public HTTPException(string message, Exception inner) Parameters Type Name Description String message The message. Exception inner The inner exception."
  },
  "api/VpnSDK.Interfaces.IRasConnectionConfiguration.html": {
    "href": "api/VpnSDK.Interfaces.IRasConnectionConfiguration.html",
    "title": "Interface IRasConnectionConfiguration | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Interface IRasConnectionConfiguration Interface IRasConnectionConfiguration. Tagging interface for RAS-based IConnectionConfiguration . Inherited Members IConnectionConfiguration.ConnectionType Namespace : VpnSDK.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IRasConnectionConfiguration : IConnectionConfiguration See Also IConnectionConfiguration"
  },
  "api/VpnSDK.OpenVpnConnectionConfigurationBuilder.html": {
    "href": "api/VpnSDK.OpenVpnConnectionConfigurationBuilder.html",
    "title": "Class OpenVpnConnectionConfigurationBuilder | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Class OpenVpnConnectionConfigurationBuilder Class OpenVpnConnectionConfigurationBuilder. Builder for an OpenVPN IConnectionConfiguration object. Inheritance Object OpenVpnConnectionConfigurationBuilder Namespace : VpnSDK Assembly : cs.temp.dll.dll Syntax public class OpenVpnConnectionConfigurationBuilder Methods Build() Builds an based off this instance. Declaration public IConnectionConfiguration Build() Returns Type Description IConnectionConfiguration IConnectionConfiguration. SetCipher(OpenVpnCipherType) Sets the OpenVPN cipher. Declaration public OpenVpnConnectionConfigurationBuilder SetCipher(OpenVpnCipherType cipherType) Parameters Type Name Description OpenVpnCipherType cipherType Type of the cipher. Returns Type Description OpenVpnConnectionConfigurationBuilder OpenVpnConnectionConfigurationBuilder. SetNetworkProtocol(NetworkProtocolType) Sets the network protocol. Declaration public OpenVpnConnectionConfigurationBuilder SetNetworkProtocol(NetworkProtocolType protocol) Parameters Type Name Description NetworkProtocolType protocol The protocol. Returns Type Description OpenVpnConnectionConfigurationBuilder OpenVpnConnectionConfigurationBuilder. SetPort(UInt16) Sets remote port. Declaration public OpenVpnConnectionConfigurationBuilder SetPort(ushort port) Parameters Type Name Description UInt16 port The port. Returns Type Description OpenVpnConnectionConfigurationBuilder OpenVpnConnectionConfigurationBuilder. SetScramble(Boolean) Sets whether to use XOR-based traffic scrambling or not. Declaration public OpenVpnConnectionConfigurationBuilder SetScramble(bool scramble) Parameters Type Name Description Boolean scramble if set to true traffic scrambling is enabled. Returns Type Description OpenVpnConnectionConfigurationBuilder OpenVpnConnectionConfigurationBuilder."
  },
  "api/VpnSDK.Interfaces.html": {
    "href": "api/VpnSDK.Interfaces.html",
    "title": "Namespace VpnSDK.Interfaces | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Namespace VpnSDK.Interfaces Interfaces IBestAvailable Interface IBestAvailable. Tagging interface that describes a special ILocation that always finds the 'best available' location for the user. IConnectionConfiguration Interface IConnectionConfiguration. Provides an interface for a connection configuration. IConnectionInfo Interface IConnectionInfo. Describes the current connection info. ILocation Interface ILocation. Describes an interface for a generic location. IOpenVpnConnectionConfiguration Interface IOpenVpnConnectionConfiguration. Provides an interface that contains OpenVPN specific options. IRasConnectionConfiguration Interface IRasConnectionConfiguration. Tagging interface for RAS-based IConnectionConfiguration . IRegion Interface IRegion. Describes a region as an ILocation . ISDK Interface ISDK. Provides an interface for the SDK APIs. IUser Interface IUser. Provides an interface for API users/customers."
  },
  "api/VpnSDK.Helpers.html": {
    "href": "api/VpnSDK.Helpers.html",
    "title": "Namespace VpnSDK.Helpers | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Namespace VpnSDK.Helpers Classes BatchPingUtility Class BatchPingUtility. Provides utilities for batch pinging multiple locations in parallel. VpnProtocolDiagnostics Class VpnProtocolDiagnostics. Provides utilities for diagnosing VPN protocol issues."
  },
  "api/VpnSDK.Enums.html": {
    "href": "api/VpnSDK.Enums.html",
    "title": "Namespace VpnSDK.Enums | VpnSDK v2 - WLVPN .NET Framework SDK",
    "keywords": "Namespace VpnSDK.Enums Enums AccountStatus Enum AccountStatus. Refers to what status the account has on the API. Values \"Paid\", \"Expired\", \"Trial\" and \"Free\" should be ignored as they only pertain to specific resellers who have been informed directly about these values. AuthenticationStatus Enum AuthenticationStatus. Describes the status of the user authentication process. ConnectionStatus Enum ConnectionStatus. Describes the states of a VPN connection. DriverInstallResult Enum DriverInstallResult. Describes the result of installing a device driver. ErrorType Enum ErrorType. Represents the different types of errors that the SDK can return for localization purposes. LoadLevel Enum LoadLevel. Represents the current user load level of a region. The lower, the better. NetworkConnectionType Enum NetworkConnectionType. Defines types of connections that can be used for a VPN tunnel. NetworkProtocolType Enum NetworkProtocolType. Defines Internet Protocol traffic types. OpenVpnCipherType Enum OpenVpnCipherType. Describes what security ciphers are available to use with OpenVPN. OpenVpnLogLevel Enum OpenVpnLogLevel. Refers to what level of logging OpenVPN should use. OperationStatus Enum OperationStatus. Represents the current status of an operation. RefreshLocationListStatus Enum RefreshLocationListStatus. Describes the status of a server list refresh operation."
  }
}